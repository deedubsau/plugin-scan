require File.expand_path(File.dirname(__FILE__) + "/../../../lib/use_cases/creates_exploitables")

module UseCases
  describe CreatesExploitables do
    before { stub_const('Exploitable', Class.new) }

    describe ".create" do
      let(:id)   { 'the-id' }
      let(:data) { double }
      let(:exploitable)  { double.as_null_object }

      before { Exploitable.stub(:new => exploitable) }

      context "with data" do
        before { data.stub(:empty? => false) }

        it "instantiates a new exploitable" do
          Exploitable.should_receive(:new).with(data) { exploitable }
          CreatesExploitables.create(id, data)
        end

        it "assigns the id" do
          exploitable.should_receive(:_id=).with(id)
          CreatesExploitables.create(id, data)
        end

        it "saves the exploitable" do
          exploitable.should_receive(:save!)
          CreatesExploitables.create(id, data)
        end
      end

      context "with no data" do
        before { data.stub(:empty? => true) }

        it "does not save an exploitable" do
          exploitable.should_not_receive(:save!)
          CreatesExploitables.create(id, data)
        end
      end
    end
  end
end
